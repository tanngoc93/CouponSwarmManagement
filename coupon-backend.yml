version: "3.8"

networks:
  traefik-network:
    driver: overlay
    external: true

  db-network:
    driver: overlay
    external: true

services:
  backend:
    image: tanngoc93/com.thedogpaws.coupon:latest
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
    environment:
      DB_POOL:     ""
      DB_PORT:     "${RAILS_DB_PORT}"
      DB_HOST:     "${RAILS_DB_HOST}"
      DB_USER:     "${RAILS_DB_USER}"
      DB_PASSWORD: "${RAILS_DB_PASSWORD}"
      DB_FOR_PROD: "${RAILS_DB_PROD}"
      REDIS_HOST:  "${REDIS_HOST}"
      RAILS_ENV:   "${RAILS_ENV}"
      RACK_ENV:    "${RACK_ENV}"
      PLATFORM:    "${RAILS_PLATFORM}"
      PORT:        "${PORT}"
    networks:
      - traefik-network
      - db-network
    depends_on:
      - redis
      - sidekiq
    deploy:
      mode: replicated
      replicas: 1
      labels:
        - "traefik.enable=true"
        - "traefik.docker.network=traefik-network"
        - "traefik.http.middlewares.redirect-to-https.redirectscheme.scheme=https"
        # 
        - "traefik.http.routers.backend.rule=Host(`couponapi.${DOMAIN}`)"
        - "traefik.http.routers.backend.entrypoints=web"
        - "traefik.http.routers.backend.middlewares=redirect-to-https@docker"
        # 
        - "traefik.http.services.backend-svc.loadbalancer.server.port=80"
        # 
        - "traefik.http.routers.backend-secured.rule=Host(`couponapi.${DOMAIN}`)"
        - "traefik.http.routers.backend-secured.entrypoints=websecured"
        - "traefik.http.routers.backend-secured.tls=true"
        - "traefik.http.routers.backend-secured.tls.certresolver=myhttpchallenge"
      update_config:
        parallelism: 1
        delay: 10s
      restart_policy:
        condition: any
